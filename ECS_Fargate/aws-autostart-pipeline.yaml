---
AWSTemplateFormatVersion: 2010-09-09


Description: >
  Cloudformation template for continuous pipeline that build and deploy to ecs fargate tasks.

Parameters:
  ConnectionArn:
    Type: String
    Default: ConnectionArn
    NoEcho: true
    Description: >
      ConnectionArn for Github repo.

  GitHubRepo:
    Type: String
    Default: Mhm0ud/b2b-backend
    Description: The repo name of the sample service.

  GitHubBranch:
    Type: String
    Default: develop
    Description: The branch of the repo to continuously deploy.

  Route53HostedZoneName:
    Type: String
    Default: domain.xyz
    Description: The name of the hosted zone.

  DomainName:
    Type: String
    Default: Name-of-the-pr.api.domain.xyz
    Description: The domain name of the app.

  ContainerPort:
    Type: Number
    Default: 80
    Description: The port of your app.

  S3EnvBucketLocation: 
    Default: "arn:aws:s3:::backend-env-file"
    Description : "Env Bucket Location, Must be the ARN of the S3 bucket."
    Type: "String"
    MinLength: "1"
    MaxLength: "64"
  
  S3EnvObject: 
    Default: "dev.env"
    Description : "Name of the Env file in the S3 Bucket"
    Type: "String"
    MinLength: "1"
    MaxLength: "64"
    
  TemplateBucket:
    Type: String
    Default: cloud-formation-b2b-backend
    Description: >
      The S3 bucket from which to fetch the templates used by this stack.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      GitHubRepo:
        default: "Repo"
      GitHubBranch:
        default: "Branch"
      ConnectionArn:
        default: "ConnectionArn"
    ParameterGroups:
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubRepo
          - GitHubBranch
          - ConnectionArn
      - Label:
          default: Domain configuration
        Parameters:
          - Route53HostedZoneName
          - DomainName
      - Label:
          default: Evironment file configuration
        Parameters:
          - S3EnvBucketLocation
          - S3EnvObject
          - ContainerPort
      - Label:
          default: Stack Configuration
        Parameters:
          - TemplateBucket

Resources:
  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/module-ecs-cluster.yaml"

  ECR:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/module-ecr.yaml"
      
  DeploymentPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/module-deployment-pipeline.yaml"
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        Service: !GetAtt Service.Outputs.Service
        ConnectionArn: !Ref ConnectionArn
        GitHubRepo: !Ref GitHubRepo
        GitHubBranch: !Ref GitHubBranch
        Repository: !GetAtt ECR.Outputs.Repository

  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/module-load-balancer.yaml"
      Parameters:
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId
        Route53HostedZoneName: !Ref Route53HostedZoneName
        DomainName: !Ref DomainName
        ContainerPort: !Ref ContainerPort

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/module-vpc.yaml"
      Parameters:
        Name: !Ref AWS::StackName
        VpcCIDR: 10.215.0.0/16
        Subnet1CIDR: 10.215.10.0/24
        Subnet2CIDR: 10.215.20.0/24

  Service:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/module-service.yaml"
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        TargetGroup: !GetAtt LoadBalancer.Outputs.TargetGroup
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: !GetAtt VPC.Outputs.Subnets
        Repository: !GetAtt ECR.Outputs.Repository
        S3EnvBucketLocation: !Ref S3EnvBucketLocation
        S3EnvObject: !Ref S3EnvObject
        ContainerPort: !Ref ContainerPort

Outputs:
  ServiceUrl:
    Description: The sample service that is being continuously deployed.
    Value: !GetAtt LoadBalancer.Outputs.ServiceUrl

  PipelineUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt DeploymentPipeline.Outputs.PipelineUrl
